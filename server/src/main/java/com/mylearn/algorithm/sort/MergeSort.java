package com.mylearn.algorithm.sort;


import org.apache.commons.lang.StringUtils;

/**
 * Created by IntelliJ IDEA.
 * User: yingkuohao
 * Date: 13-9-25
 * Time: ????10:08
 * CopyRight:360buy
 * Descrption: ?öã??????+????
 * ???????????????n????n????????????????????????????'???????????????????????????§Ö??§»?????
 * ??????§»??????????§»???????????4??????????????????¦Í????¦Ç???
 *
 * ?????????
 * ???¡Â??¦Ç???????????????????????
 * 1. ?????????§³????????????????????
 * 2. ??????????????????§³??????????????????????????????????????
 * 3. ??????????????????????????????
 * 4. ????????????????????????b?????????????????????????????
 *
 * To change this template use File | Settings | File Templates.
 */
public class MergeSort {

    public static void main(String args[]) {
        Integer[] integers = new Integer[]{12, 15, 9, 24, 6, 31};
        MergeSort mergeSort = new MergeSort();
        System.out.println("?????" + StringUtils.join(integers, ","));
        integers = mergeSort.execute(integers);
        System.out.println("???" + StringUtils.join(integers, ","));
    }

    /**
     * ???¦Ç???
     * 1.  ??????? ??????????????k???????????????k????????????????????
     * 2. ?????? ???????????????????????n0?????????k?????????¨À?
     * 3. ?????? ?????????????????4???????????????????y????????????§¹???????5????????????
     * @param integers
     * @return
     */
    private Integer[] execute(Integer[] integers) {

        if (integers.length == 1) {
            return integers;
        }

        int center = integers.length / 2;

        //1.??????????????????
        Integer[] left = new Integer[center];
        Integer[] right = new Integer[integers.length - center];
        //?????????
        System.arraycopy(integers, 0, left, 0, center);
        System.arraycopy(integers, center, right, 0, right.length);

        //2. ????????????
        left = execute(left);
        right = execute(right);
        //3.??????????????
        Integer[] result = sort(left, right);
        return result;
    }


    /**
     * ??????
     * @param left
     * @param right
     * @return
     */
    private Integer[] sort(Integer[] left, Integer[] right) {
        int i = 0, j = 0;
        Integer[] result = new Integer[left.length + right.length];
        //????????????????§³??
        while (i < left.length && j < right.length) {
            if (left[i] < right[j]) {
                result[i + j] = left[i];
                i++;
            } else {
                result[i + j] = right[j];
                j++;
            }
        }
        //????????????????????§³?????????????????copy??result?§µ??????????????????????????}????????????????????????
        if (i == left.length) {
            while (j < right.length) {
                result[i + j] = right[j];
                j++;
            }
        }
        if (j == right.length) {
            while (i < left.length) {
                result[i + j] = left[i];
                i++;
            }
        }

        return result;
    }

}

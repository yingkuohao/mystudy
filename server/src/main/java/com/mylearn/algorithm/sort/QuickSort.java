package com.mylearn.algorithm.sort;


import org.apache.commons.lang.StringUtils;

/**
 * Created by IntelliJ IDEA.
 * User: yingkuohao
 * Date: 13-9-10
 * Time: ????9:16
 * CopyRight:360buy
 * Descrption: ????????  ??ÁÙ????O(nlogn)
 *  ??????????????????????????????????§µ?
 *  ???????????i????????›Ôtmp????????¦Ë??? ??¦Â?????????j§³????????????¦Ë??i?????j??????
 *  ?????????????????????????i??????????????¦Ë??j??i??????
 *  ????????????i=j?????????§Þ?¦Ë?????tmp??????i??j????
 *  ???????????????????i??????????§³??i?????i??????????????i?????
 *
 * To change this template use File | Settings | File Templates.
 */
public class QuickSort {
    public static void main(String args[]) {
        Integer[] integers = new Integer[]{12, 15, 9, 24, 6, 31};
        QuickSort selectSort = new QuickSort();
        System.out.println("?????" + StringUtils.join(integers, ","));
        selectSort.execute(integers);
        System.out.println("???" + StringUtils.join(integers, ","));
    }

    public void execute(Integer[] integers) {
        int high = integers.length - 1;
        doit(integers, high, 0);
    }

    /**
     * ???¦Å??
     * @param integers
     * @param high
     * @param low
     */
    private void doit(Integer[] integers, int high, int low) {
        if (low < high) {
            //???????
            int mid = getMid(integers, high, low);
            doit(integers, mid-1, low);
            doit(integers, high, mid+1);
        }
    }

    /**
     * ?????????????low??high????¦Ë??
     * @param integers
     * @param high   ??¦Ë???
     * @param low    ??¦Ë???
     * @return
     */
    private int getMid(Integer[] integers, int high, int low) {
        int key = integers[low];//???????
        integers[low] = null;//???Ž\????????????????¦Í?????????????
        while (low != high) {
            if (integers[high] != null) {
                if (integers[high] < key) {
                    //???high?????????§³?????????????high???????????low++???????low???????
                    integers[low] = integers[high];
                    integers[high] = null;
                    low++;
                } else {
                    //???high??????????????????????
                    high--;
                }
            }

            if (integers[low] != null) {
                //??????????low??high????????
                if (integers[low] > key) {
                    //???????low?????low???????key?????low??????????????low????????Ñkhigh??????§Ò???
                    integers[high] = integers[low];
                    integers[low] = null;
                    high--;
                } else {
                    low++;
                }
            }
        }

        integers[low] = key;  //???low??high?????????¦Ë??????????????????????key??????????????
        System.out.println("?§Þ?????" + StringUtils.join(integers, ",") +"mid="+low);
        return low;
    }
}

package com.mylearn.rmi.principle.remote;


import javax.print.attribute.standard.Severity;
import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;

/**
 * Created by IntelliJ IDEA.
 * User: yingkuohao
 * Date: 13-10-30
 * Time: ????5:23
 * CopyRight:360buy
 * Descrption:  ?????????????????????????????????
 * 1. ?????????????????????????????????????
 * 2.???????????????????????????¨®???
 * 3. ?????????§Ý??????????????????????????????????????
 * To change this template use File | Settings | File Templates.
 */
public class Server_Skeleton implements Runnable {

    private Server server;   //??????????

    public void run() {
        try {
            ServerSocket serverSocket = new ServerSocket(9090);    //????socket?????
            while (true) {
                Socket socket = serverSocket.accept(); //???????????
                System.out.println("??????bsockett??ok??");
                InputStream inputStream = socket.getInputStream();
                OutputStream outputStream = socket.getOutputStream();
                ObjectInputStream objectInputStream = new ObjectInputStream(inputStream);
                ObjectOutputStream objectOutputStream = new ObjectOutputStream(outputStream);

                String method = (String) objectInputStream.readObject(); //????????????????????§Ý?

                if ("sayHello".equalsIgnoreCase(method)) {
                    //?????saylHello???????????ServerImpl?????
                    server = new ServerImpl();
                    String s = server.sayHello();
                    objectOutputStream.writeObject(s); //???§Ý?
                    objectOutputStream.flush();
                }


                if ("sayLove".equalsIgnoreCase(method)) {
                    //?????sayLove???????????ServerImpl?????
                    server = new ServerImpl();
                    String s = server.sayLove();
                    objectOutputStream.writeObject(s);
                    objectOutputStream.flush();
                }

                try {
                    Thread.sleep(1000);
                } catch (InterruptedException e) {
                    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
                }
                outputStream.close();
                inputStream.close(); //????????????????????
                socket.close();
                System.out.println("????????????");
            }

        } catch (IOException e) {
            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
        } catch (ClassNotFoundException e) {
            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
        }

    }
}
